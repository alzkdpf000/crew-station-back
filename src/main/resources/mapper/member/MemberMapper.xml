<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.crewstation.mapper.member.MemberMapper">
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into tbl_member (member_name, member_phone, member_email, member_social_url, member_birth, member_gender, member_mbti, member_password)
        values (#{memberName}, #{memberPhone}, #{memberEmail}, #{memberSocialUrl}, #{memberBirth}, #{memberGender}, #{memberMbti}, #{memberPassword})
    </insert>
    <select id="selectEmail">
        select count(*) > 0
        from tbl_member
        where member_email = #{memberEmail}
    </select>
<!--  내가 추가한 부분 -->
    <select id="selectMemberByMemberEmail">
        select *
        from tbl_member
        where member_email = #{memberEmail} and member_status = 'active'
    </select>

<!-- 게스트 관련 부분 -->
    <insert id="insertGuest" useGeneratedKeys="true" keyProperty="id">
        insert into tbl_member (member_name)
        values ('guest')
    </insert>
    <!--  내가 추가한 부분 -->
    <select id="selectForLogin">
        select id, member_name, member_email, member_social_url, member_gender, member_mbti, member_password, member_status, member_provider, social_img_url, member_social_email, member_description, member_role, created_datetime, updated_datetime, chemistry_score
        from tbl_member
        where member_email = #{memberEmail} and member_password = #{memberPassword} and member_status = 'active'
    </select>
<!--  social  -->
    <insert id="insertSns" keyProperty="id" useGeneratedKeys="true">
        insert into tbl_member (member_name, member_phone, member_social_url, member_gender, member_birth, member_mbti, member_provider, social_img_url, member_social_email)
        values (#{memberName}, #{memberPhone}, #{memberSocialUrl}, #{memberGender}, #{memberBirth}, #{memberMbti}, #{memberProvider}, #{socialImgUrl}, #{memberSocialEmail})
    </insert>

    <select id="selectMemberBySnsEmail">
        select id, member_name, member_phone, member_social_url, member_birth, member_gender, member_mbti, member_provider, social_img_url, member_social_email, member_description, chemistry_score
        from tbl_member
        where member_social_email = #{memberSocialEmail} and member_status = 'active'
    </select>
    <!-- 멤버 프로필 조회용 -->
    <select id="selectProfileById" parameterType="long"
            resultType="com.example.crewstation.dto.member.MemberProfileDTO">
        SELECT id   AS memberId,
               member_name AS memberName,
               social_img_url AS socialImgUrl
        FROM tbl_member
        WHERE id = #{memberId}

    </select>

<!--    비밀번호 변경-->
    <update id="updatePassword">
        update tbl_member
        set member_password = #{memberPassword}
        where member_email = #{memberEmail}
    </update>

    <!-- 별점 등록 시 케미지수 업데이트 -->
    <update id="updateChemistryScore">
        UPDATE tbl_member
        SET chemistry_score = LEAST(
                100,
                GREATEST(
                        0,
                        chemistry_score +
                        CASE #{rating}
                            WHEN 5 THEN 2
                            WHEN 4 THEN 1
                            WHEN 3 THEN 0
                            WHEN 2 THEN -1
                            WHEN 1 THEN -2
                            ELSE 0
                            END
                )
                              ),
            updated_datetime = NOW()
        WHERE id = #{sellerId}
    </update>

<!-- 회원 검색-->
    <select id="selectSearchMember">
        select tm.id as id,
               tm.member_name,
               tm.member_email,
               tm.member_social_email,
               tm.social_img_url,
               vfmf.file_path
        from tbl_member tm left outer join view_file_member_file vfmf on tm.id = vfmf.member_id and member_status = 'active' and member_role = 'member'
        where tm.member_email like '%' || #{search} || '%'
        or tm.member_name like '%' || #{search} || '%'
    </select>

    <select id="findAdminMembers">
        select
        tm.id,
        tm.member_name,
        tm.member_phone,
        tm.member_email,
        tm.member_social_url,
        tm.member_birth,
        tm.member_gender,
        tm.member_mbti,
        tm.member_status,
        tm.member_provider,
        tm.social_img_url,
        tm.member_social_email,
        tm.member_description,
        tm.member_role,
        tm.created_datetime,
        tm.updated_datetime,
        tm.chemistry_score
        from tbl_member tm
        <where>
            <if test="search.keyword != null || search.keyword != ''">
                (tm.member_name ilike '%' || #{search.keyword} || '%'
                or tm.member_email ilike '%' || #{search.keyword} || '%')
            </if>
        </where>
        order by tm.id desc
        limit #{limit} offset #{offset}


    </select>

    <select id="countAdminMembers">
        select count(*)
        from tbl_member tm
        <where>
            <if test="search.keyword != null and search.keyword != ''">
                (tm.member_name ilike '%' || #{search.keyword} || '%'
                or tm.member_email ilike '%' || #{search.keyword} || '%')
            </if>
        </where>
    </select>

    <select id="findAdminMemberDetail">
        select
            tm.id,
            tm.member_name,
            tm.member_phone,
            tm.member_email,
            tm.member_social_url,
            tm.member_birth,
            tm.member_gender,
            tm.member_mbti,
            tm.member_password,
            tm.member_status,
            tm.member_provider,
            tm.social_img_url,
            tm.member_social_email,
            tm.member_description,
            tm.member_role,
            tm.created_datetime,
            tm.updated_datetime,
            tm.chemistry_score
        from tbl_member tm
        where tm.id = #{memberId}
    </select>



    <!-- 나의 판매내역 목록 조회 -->
    <select id="selectMySaleList">
        SELECT
            ps.id                                      AS id,
            ps.payment_phase                           AS paymentStatus,
            p.id                                       AS postId,
            p.id                                       AS purchaseId,
            p.post_title                               AS postTitle,
            vp.purchase_product_price                  AS purchaseProductPrice,
            vp.purchase_product_count                  AS purchaseProductCount,
            vf.file_path || '/' || vf.file_name        AS mainImage,
            ps.created_datetime                        AS createdDatetime,
            ps.updated_datetime                        AS updatedDatetime
        FROM tbl_payment_status ps
                 JOIN view_post_purchase vp
                      ON ps.purchase_id = vp.id
                 JOIN tbl_post p
                      ON vp.id = p.id
                 LEFT JOIN view_file_post_section_file vf
                           ON vf.image_type = 'main'
                               AND vf.id = p.id
        WHERE ps.member_id = #{memberId}
        ORDER BY ps.created_datetime DESC
    </select>

    <select id="selectMonthlyJoin">
        select
            TO_CHAR(
                    date_trunc('month', created_datetime AT TIME ZONE 'Asia/Seoul'),
                    'YYYY-MM'
            ) AS date,
            COUNT(id) AS count
        from tbl_member
        where (created_datetime AT TIME ZONE 'Asia/Seoul')
                  >= date_trunc('month', (now() AT TIME ZONE 'Asia/Seoul')) - INTERVAL '2 months'
        group by 1
        order by 1;


    </select>



    <select id="selectCountTodayJoin">
        SELECT COUNT(id)
        FROM tbl_member
        WHERE (created_datetime AT TIME ZONE 'Asia/Seoul')::date
          = (now() AT TIME ZONE 'Asia/Seoul')::date
    </select>

    <select id="selectTotalMemberCount">
        select count(*)
        from tbl_member
    </select>

    <insert id="insertAdmin" useGeneratedKeys="true" keyProperty="id">
        insert into tbl_member (member_name, member_email, member_password, member_role)
        values (#{memberName}, #{memberEmail}, #{memberPassword}, #{memberRole})
    </insert>




</mapper>