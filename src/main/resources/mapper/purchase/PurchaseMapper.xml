<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.crewstation.mapper.purchase.PurchaseMapper">
    <sql id="giftSearch">
        <if test="search.keyword != null and search.keyword != ''">
            and (
            vpp.purchase_country like '%' || #{search.keyword} || '%'
            or vpp.post_title like '%' || #{search.keyword} || '%'
            )
        </if>
    </sql>

    <sql id="purchaseSearch">
        <if test="search.keyword != null and search.keyword != ''">
            AND (
            vpp.post_title LIKE CONCAT('%', #{search.keyword}, '%')
            OR vpp.purchase_country LIKE CONCAT('%', #{search.keyword}, '%')
            )
        </if>
    </sql>

    <select id="selectAllByKeyWord">
        select vpp.id as post_id,
        vpp.post_title,
        vpp.purchase_country,
        vpp.purchase_delivery_method,
        vpp.purchase_limit_time,
        vpp.purchase_product_count,
        vpp.purchase_product_price as price,
        vpp.purchase_delivery_method,
        vpp.created_datetime,
        vpp.updated_datetime,
        vfps.file_path,
        vfps.file_name,
        tm.member_name,
        tm.chemistry_score
        from tbl_member tm join
        view_post_purchase vpp on tm.id = vpp.member_id
        join tbl_post_section tps on vpp.id = tps.post_id and vpp.post_status = 'active'
        join view_file_post_section_file vfps on tps.id = vfps.post_section_id and vfps.image_type = 'main'
        where vpp.created_datetime + (vpp.purchase_limit_time || 'hour')::interval > now()
        <include refid="giftSearch"/>
        limit #{criteria.count} offset #{criteria.offset}
    </select>

    <select id="selectCountAllByKeyWord">
        select count(vpp.id)
        from view_post_purchase vpp
        join tbl_post_section tps on vpp.id = tps.post_id and vpp.post_status = 'active'
        join view_file_post_section_file vfps on tps.id = vfps.post_section_id and vfps.image_type = 'main'
        where vpp.created_datetime + (vpp.purchase_limit_time || 'hour')::interval > now()
        <include refid="giftSearch"/>
    </select>

    <select id="selectByPostId">
        select vpp.id as post_id,
            vpp.post_title,
               vpp.purchase_country,
               vpp.purchase_delivery_method,
               vpp.purchase_limit_time,
               vpp.purchase_product_count,
               vpp.purchase_product_price as price,
               vpp.purchase_delivery_method,
               vpp.created_datetime,
               vpp.updated_datetime,
               tm.id as member_id,
               tm.chemistry_score,
               tm.member_name,
               tm.social_img_url,
               vfmf.id as file_id,
               vfmf.file_name,
               vfmf.file_origin_name,
               vfmf.file_path,
               ta.address
        from tbl_member tm
                 left outer join view_file_member_file vfmf on tm.id = vfmf.member_id
                 join view_post_purchase vpp on tm.id = vpp.member_id and vpp.id = #{postId}
                 join tbl_address ta on tm.id = ta.member_id
        where vpp.post_status = 'active'
    </select>

    <update id="updateReadCount">
        update tbl_post
        set post_read_count = post_read_count + 1
        where id = #{postId}
    </update>

    <insert id="insert">
        insert into tbl_purchase(post_id, purchase_product_price, purchase_limit_time, purchase_product_count,
                                 purchase_country, purchase_delivery_method)
        values (#{postId},#{purchaseProductPrice},#{purchaseLimitTime},#{purchaseProductCount},#{purchaseCountry},#{deliveryMethod})
    </insert>

    <update id="update">
        update tbl_purchase
        set purchase_country         = #{purchaseCountry},
            purchase_delivery_method = #{deliveryMethod},
            purchase_limit_time      = #{purchaseLimitTime},
            purchase_product_price   = #{purchaseProductPrice},
            purchase_product_count   = #{purchaseProductCount}
        where post_id = #{postId}
    </update>

    <select id="selectPurchaseDetailByPostId">
        SELECT vpp.id AS post_id,
               vpp.post_title,
               vpp.purchase_country,
               vpp.purchase_delivery_method,
               vpp.purchase_product_price AS price,
               vpp.created_datetime,
               vpp.updated_datetime,
               tm.id AS member_id,
               tm.member_name
        FROM tbl_member tm
        JOIN view_post_purchase vpp
        ON tm.id = vpp.member_id
        AND vpp.id = #{postId}
        WHERE vpp.post_status = 'active'
    </select>

    <!-- 멤버아이디로 구매내역 조회  -->
    <select id="selectPurchaseList">
        SELECT
        vpp.id AS post_id,
        vpp.post_title,
        vpp.purchase_product_price AS purchase_product_price,
        vpp.created_datetime,
        vpp.updated_datetime,
        tps.payment_phase AS status,
        tm.id AS member_id,
        vfps.file_id,
        vfps.file_name,
        vfps.file_origin_name,
        vfps.file_path
        FROM tbl_member tm
        JOIN view_post_purchase vpp ON tm.id = vpp.member_id
        LEFT JOIN tbl_post_section tsec ON vpp.id = tsec.post_id
        LEFT JOIN view_file_post_section_file vfps ON tsec.id = vfps.post_section_id
        LEFT JOIN tbl_payment_status tps ON vpp.id = tps.purchase_id
        WHERE tm.id = #{memberId}
        AND vpp.post_status = 'active'
        <include refid="purchaseSearch"/>
        ORDER BY vpp.created_datetime DESC
        LIMIT #{criteria.size}
        OFFSET #{criteria.offset}
    </select>



    <!-- 전체 개수 조회 (페이징용) -->
    <select id="selectTotalCount" resultType="int">
        SELECT COUNT(*)
        FROM view_post_purchase vpp
        JOIN tbl_member tm ON tm.id = vpp.member_id
        WHERE tm.id = #{memberId}
        AND vpp.post_status = 'active'
        <include refid="purchaseSearch"/>
    </select>

</mapper>